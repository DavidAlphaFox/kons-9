#!/bin/sh

# Describe workstation setup to ease information sharing with developers

main()
{
    describe_uname
    describe_date
    describe_sbcl
    describe_ccl
    describe_brew
    describe_macports
    describe_quicklisp
}

describe_uname()
{
    uname=$(uname -a)
    printf 'Uname: %s\n' "${uname}"
}

describe_date()
{
    date=$(date)
    printf 'Date: %s\n' "${date}"
}

describe_sbcl()
{
    sbcl_pathname=$(find_program sbcl)
    case "${sbcl_pathname}" in
	:NOT-FOUND)
	    sbcl_version=':NOT-FOUND'
	    ;;
	*)
	    sbcl_version=$(${sbcl_pathname} --version)
	    sbcl_description=$(printf '%s (%s)' "${sbcl_pathname}" "${sbcl_version}")
	    ;;
    esac
    printf 'SBCL: %s\n' "${sbcl_description}"
}

describe_ccl()
{
    ccl_pathname=$(find_program ccl ccl64)
    case "${ccl_pathname}" in
	:NOT-FOUND)
	    ccl_version=':NOT-FOUND'
	    ccl_description=':NOT-FOUND'
	    ;;
	*)
	    ccl_version=$(${ccl_pathname} --version)
	    ccl_description=$(printf '%s (%s)' "${ccl_pathname}" "${ccl_version}")
	    ;;
    esac
    printf 'CCL: %s\n' "${ccl_description}"
}

describe_brew()
{
    brew_pathname=$(find_program brew)
    printf 'Brew: %s\n' "${brew_pathname}"
}

describe_macports()
{
    macports_pathname=$(find_program port)
    printf 'MacPorts: %s\n' "${macports_pathname}"
}

describe_quicklisp()
{
    quicklisp_installed_p=$(quicklisp_installed_p)
    printf 'QuickLisp: %s\n' "${quicklisp_installed_p}"
}

quicklisp_installed_p()
{
    local snippet lisp
    snippet="(progn (write (and (member :quicklisp *features*) t)) (quit))"
    lisp=$(pick_lisp)
    case "${lisp}" in
	*sbcl*)
	    "${lisp}" --noinform --eval "${snippet}"
	    ;;
	*ccl*)
	    "${lisp}" --eval "${snippet}"
	    ;;
	:NOT-FOUND)
	    printf 'NIL'
	    ;;
    esac
}

pick_lisp()
{
    local lisp_candidate
    for lisp_candidate in ${sbcl_pathname} ${ccl_pathname}; do
	if [ ! "${lisp_candiate}" = ":NOT-FOUND" ]; then
	    printf '%s' "${lisp_candidate}"
	    return
	fi
    done
    printf ':NOT-FOUND'
}

find_program_1()
{
    local needle program IFS

    needle="$1"
    program=':NOT-FOUND'
    IFS=':'

    set -- ${PATH}
    
    while [ "${program}" = ':NOT-FOUND' ]; do
	if [ $# -eq 0 ]; then
	    break
	fi
	if [ -x "$1/${needle}" ]; then
	    program="$1/${needle}"
	fi
	shift
    done
    printf '%s' "${program}"
}

find_program()
{
    local needle program

    program=':NOT-FOUND'
    while [ "${program}" = ':NOT-FOUND' ]; do
	if [ $# -eq 0 ]; then
	    break
	fi
	program=$(find_program_1 "$1")
	shift
    done
    printf '%s' "${program}"
}


main "$@"
